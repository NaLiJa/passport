;-------------------------------
; IDVolumeName
; identify and print volume name if found
; (ProDOS and Pascal supported)
;
; in:  $0800..$08FF contains T00,S00
;      first page of track buffer also contains T00,S00
;      gIsProDOS or gIsPascal is true
; out: C clear if disk volume name was found and printed
;      C set otherwise
;      oVerflow always clear
;      all registers clobbered
;      all other flags clobbered
;-------------------------------
!zone {
IDVolumeName
; read T00,S0B (volume key block)
         ldx   #$00
         stx   cmp1
         ldy   #$0B
         tya
         sta   gDisplayBytes
         clc
         adc   #BASEPAGE
         sta   gAddress+1
         sta   cmp1+1
         jsr   ReadSectorXY
         bcs   .error

         lda   gIsPascal
         beq   .pascal

; sanity check the volume name length byte
         ldy   #$04
         lda   (cmp1), y
         cmp   #$F1
         bcc   .error
         and   #$0F
         tax
         lda   #$05
         sta   .offset+1  ; passport-test-suite/Investigating Plant Growth.woz [Z=0] reaches here
         bne   .print     ; always branches

.pascal
         ldy   #$02
         lda   (cmp1), y
         cmp   #$06
         bne   .error
         ldy   #$06
         lda   (cmp1), y
         beq   .error
         cmp   #$08
         bcs   .error     ; passport-test-suite/Notecard Maker.woz [C=0] reaches here
         tax
         lda   #$07
         sta   .offset+1

; note: execution falls through here

.print
; X (now the volume name length) is preserved by the PrintByID call
         lda   #s_volumename
         jsr   PrintByID

; print the volume name
.offset  ldy   #$d1       ; set at runtime
-        lda   (cmp1), y
         ora   #$80
         jsr   PrintA
         iny
         dex
         bne   -
         lda   #$8D
         jsr   PrintA
         clc
         !byte $24        ; hide next SEC
.error
         sec
         clv
         rts
}
