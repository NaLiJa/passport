;-------------------------------
; modify subroutine
; in:  A = starting address (high byte)
;      X = starting address (low byte)
;      Y = string length
;      stack = string to set
; out  $BASEPAGE buffer changed
;      $gPatchCount++
;      $modsrc zero page clobbered
;      $moddest zero page clobbered
;      stack set to return to
;        code after string
;      A,X preserved
;      Y clobbered
;      oVerflow bit clear
;      all other flags clobbered
;-------------------------------
modify
         sta   gDisplayBytes
         clc
         adc   #BASEPAGE
         sta   moddest+1
         stx   moddest
         stx   gDisplayBytes+1
         pla
         sta   modsrc
         pla
         sta   modsrc+1
         tax
         tya
         clc
         adc   modsrc
         bcc   +
         inx
+        sta   tmp
         txa
         pha
         lda   tmp
         pha
         sty   modtmp
         bit   gMode
         bpl   @exitnomod ; verify mode -> no modify
         lda   #s_modify
         jsr   PrintByID
         ldy   #0
-        lda   (moddest), y
         jsr   PrintByte
         iny
         cpy   modtmp
         bne   -
         lda   #s_modifyto
         jsr   PrintByID
         ldy   #0
-        iny
         lda   (modsrc), y
         jsr   PrintByte
         cpy   modtmp
         bne   -
         lda   #$8D
         jsr   PrintA
         bvc   +
-        sta   (moddest), y
+        lda   (modsrc), y
         dey
         bpl   -
@exit
         inc   gPatchCount
@exitnomod
         lda   gDisplayBytes
         ldx   moddest
         clv
         rts
