;-------------------------------
; #DOS32
; construct new bootloader and RWTS for converted DOS 3.2 disks
;-------------------------------
!zone {
         lda   gIsDOS32
         bne   .exit
         bit   gMode      ; nothing to do here in verify-only mode
         bpl   .exit

; sectors 2-9

         lda   #>universalrwts
         ldx   #$12       ; #BASEPAGE+2
         ldy   #$08
         jsr   CopyMemory
         lda   #$38
         sta   $1656      ; #BASEPAGE+6

         lda   #s_rwtswrite
         jsr   PrintByID

; sector 1

         lda   callrwts+2
         sec
         sbc   #$06       ; #$B7 or #$37
         ldx   #$11       ; #BASEPAGE+1
         ldy   #$01
         jsr   CopyMemory

; If original disk loads boot1 into $3700 (and expects the RWTS at $3800),
; we let Standard Delivery load boot1+RWTS+DOS and patch boot1 here so it
; doesn't try to call the RWTS itself. Boot1 will exit via the standard
; relocation routine at $1B03, after which both RWTS and DOS will be
; in higher memory.
;
; This will all fail horribly if the relocation routine decides not to
; relocate (on old Apple II machines with less than 48K), and I have made
; peace with that.

         lda   #$01
         ldx   #$38
         ldy   #$03
         jsr   compare
         !byte $20,$93,$37
         bcs   +
         ldy   #$01
         jsr   modify
         !byte $2C
+

; sector 0

         lda   callrwts+2
         cmp   #$3D
         beq   +
         lda   #<SD_DOS32
         ldx   #>SD_DOS32
         jsr   ConstructStandardDelivery
         jmp   ++

+        lda   #<SD_DOS32LO
         ldx   #>SD_DOS32LO
         jsr   ConstructStandardDelivery

++       lda   #s_bootwrite
         jsr   PrintByID
         inc   gPatchCount
.exit
}
