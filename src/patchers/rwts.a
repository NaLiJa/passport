;-------------------------------
; RWTS fixups for DOS 3.3-shaped RWTSen
;-------------------------------

!zone {
         bit   gMode      ; nothing to do here in verify-only mode
         bpl   .jmpexit1
         ldy   gIsRWTS    ; DOS 3.3-shaped RWTSen only
         beq   .initmatch

.jmpexit1
         jmp   .exit

.initmatch
         sty   .findmatch1+1

.findmatch1
         ldy   #$D1     ; SMC
         lda   #$C9
         ldx   .table1+1,y
         cpx   #$E1
         bne   .compare1
         lda   #$49
.compare1
         sta   .cmpbyte1
         lda   .table1,y
         ldy   #6
         jsr   compare
         !byte $BD,$8C,$C0
         !byte $10,$FB
.cmpbyte1
         !byte $D1      ; SMC
         bcs   +

         pha
         lda   .findmatch1+1
         asl
         adc   .findmatch1+1
         tay
         lda   .table2+1,y
         pha
         tax
-        lda   .table2+2,x
         sta   .cmpbytes2,x
         dex
         bpl   -
         ldx   .table2,y
         pla
         tay
         pla
         jsr   compare
.cmpbytes2              ; SMC
         !byte $EA,$EA,$EA,$EA
         bcs   +

         ldy   .findmatch1+1
         ldx   .table3+1,y
         stx   .cmpbyte3
         stx   .modify3
         ldx   .table3,y
         ldy   #1
         jsr   compare
.cmpbyte3               ; SMC
         !byte $D1
         bcc   +

         ldy   #1
         jsr   modify
.modify3                ; SMC
         !byte $D1

+        ldy   .findmatch1+1
         lda   .table4,y
         ldx   .table4+1,y
         ldy   #1
         jsr   compare
         !byte $A9
         bcs   +

+        ldy   .findmatch1+1
         ldx   .table5+1,y
         stx   .cmpbyte5+1
         ldx   .table5,y
         tay
         txa
         pha
         tya
         ldy   #2
         jsr   compare
.cmpbyte5
         !byte $20,$D1   ; SMC

         tay
         pla
         bcs   +
         tax
         dex
         tya
         pha
         lda   .findmatch1+1
         lsr
         tay
         lda   .table6,y
         sta   .cmpbyte6
         sta   .modify6
         tya
         ldy   #1
         jsr   compare
.cmpbyte6
         !byte $D1      ; SMC
         bcc   +

         ldy   #1
         jsr   modify
.modify6
         !byte $D1      ; SMC

+        ldy   .findmatch1+1
         iny
         iny
         cpy   #(.table1_e-.table1)*2/3
         beq   .jmpexit2
         jmp   .initmatch

.jmpexit2
         jmp   .exit

         ; address prologue (read)
         ; A,X

.table1
         !byte $03,$4F
         !byte $03,$59
         !byte $03,$64
         !byte $03,$8B
         !byte $03,$95
         !byte $02,$E1
         !byte $02,$EB
         !byte $02,$F6
         !byte $03,$2F
         !byte $03,$39
.table1_e

         ; X,Y, compare bytes (nop-pad to four bytes)

.table2
         !byte $56,$03,$D0,$F0,$EA,$EA
         !byte $60,$04,$D0,$F2,$A0,$03
         !byte $6B,$02,$D0,$E7,$EA,$EA
         !byte $92,$02,$D0,$AE,$EA,$EA
         !byte $9C,$03,$D0,$A4,$18,$EA
         !byte $E8,$03,$D0,$F4,$EA,$EA
         !byte $F2,$04,$D0,$F2,$A0,$56
         !byte $FD,$02,$D0,$E7,$EA,$EA
         !byte $36,$03,$D0,$0A,$EA,$EA
         !byte $40,$03,$F0,$5C,$38,$EA
.table2_e

         ; X, compare byte

.table3
         !byte $55,$D5
         !byte $5F,$AA
         !byte $6A,$96
         !byte $91,$DE
         !byte $9B,$AA
         !byte $E7,$D5
         !byte $F1,$AA
         !byte $FC,$AD
         !byte $35,$DE
         !byte $3F,$AA
.table3_e

         ; address prologue (write)
         ; A,X

.table4
         !byte $06,$79
         !byte $06,$7E
         !byte $06,$83
         !byte $06,$AD
         !byte $06,$B2
         !byte $06,$B7
         !byte $02,$52
         !byte $02,$57
         !byte $02,$5C
         !byte $02,$9D
         !byte $02,$A2
         !byte $02,$A7
         !byte $02,$AC
.table4_e

         ; X, compare byte

.table5
         !byte $7B,$D5
         !byte $80,$D5
         !byte $85,$D5
         !byte $AF,$D5
         !byte $B4,$D5
         !byte $B9,$D5
         !byte $54,$B8
         !byte $59,$B8
         !byte $5E,$B8
         !byte $9F,$B8
         !byte $A4,$B8
         !byte $A9,$B8
         !byte $AE,$B8
.table5_e

         ; modify byte

.table6
         !byte $D5
         !byte $AA
         !byte $96
         !byte $DE
         !byte $AA
         !byte $EB
         !byte $D5
         !byte $AA
         !byte $AD
         !byte $DE
         !byte $AA
         !byte $EB
         !byte $FF
.table6_e

.exit
}
