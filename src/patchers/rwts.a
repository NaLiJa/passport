;-------------------------------
; RWTS fixups for DOS 3.3-shaped RWTSen
;-------------------------------

!zone {
         bit   gMode      ; nothing to do here in verify-only mode
         bpl   .jmpexit
         lda   gIsRWTS    ; DOS 3.3-shaped RWTSen only
         beq   +
.jmpexit
         jmp   .exit
;
; address prologue byte 1 (read)
;
+        lda   #$03
         ldx   #$4F
         ldy   #$06
         jsr   compare    ; if T00,S03,$4F ==
         !byte $BD,$8C,$C0
         !byte $10,$FB
         !byte $C9
         bcs   +
         ldx   #$56
         ldy   #$03
         jsr   compare    ; and T00,S03,$56 ==
         !byte $D0,$F0
         !byte $EA
         bcs   +
         ldx   #$55
         ldy   #$01
         jsr   compare    ; and T00,S03,$55 !=
         !byte $D5
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S03,$55 =
         !byte $D5
;
; address prologue byte 2 (read)
;
+        lda   #$03
         ldx   #$59
         ldy   #$06
         jsr   compare    ; if T00,S03,$59 ==
         !byte $BD,$8C,$C0
         !byte $10,$FB
         !byte $C9
         bcs   +
         ldx   #$60
         ldy   #$04
         jsr   compare    ; and T00,S03,$60 ==
         !byte $D0,$F2
         !byte $A0,$03
         bcs   +
         ldx   #$5F
         ldy   #$01
         jsr   compare    ; and T00,S03,$5F !=
         !byte $AA
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S03,$5F =
         !byte $AA
;
; address prologue byte 3 (read)
;
+        lda   #$03
         ldx   #$64
         ldy   #$06
         jsr   compare    ; if T00,S03,$64 ==
         !byte $BD,$8C,$C0
         !byte $10,$FB
         !byte $C9
         bcs   +
         ldx   #$6B
         ldy   #$02
         jsr   compare    ; and T00,S03,$6B ==
         !byte $D0,$E7
         bcs   +
         ldx   #$6A
         ldy   #$01
         jsr   compare    ; and T00,S03,$6A !=
         !byte $96
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S03,$6A =
         !byte $96
;
; address epilogue byte 1 (read)
;
+        lda   #$03
         ldx   #$8B
         ldy   #$06
         jsr   compare    ; if T00,S03,$8B ==
         !byte $BD,$8C,$C0
         !byte $10,$FB
         !byte $C9
         bcs   +
         ldx   #$92
         ldy   #$02
         jsr   compare    ; and T00,S03,$92 ==
         !byte $D0,$AE
         bcs   +
         ldx   #$91
         ldy   #$01
         jsr   compare    ; and T00,S03,$91 !=
         !byte $DE
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S03,$91 =
         !byte $DE
;
; address epilogue byte 2 (read)
;
+        lda   #$03
         ldx   #$95
         ldy   #$06
         jsr   compare    ; if T00,S03,$95 ==
         !byte $BD,$8C,$C0
         !byte $10,$FB
         !byte $C9
         bcs   +
         ldx   #$9C
         ldy   #$03
         jsr   compare    ; and T00,S03,$9C ==
         !byte $D0,$A4
         !byte $18
         bcs   +
         ldx   #$9B
         ldy   #$01
         jsr   compare    ; and T00,S03,$9B !=
         !byte $AA
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S03,$9B =
         !byte $AA
;
; data prologue byte 1 (read)
;
+        lda   #$02
         ldx   #$E1
         ldy   #$06
         jsr   compare    ; if T00,S02,$E1 ==
         !byte $BD,$8C,$C0
         !byte $10,$FB
         !byte $49
         bcs   +
         ldx   #$E8
         ldy   #$03
         jsr   compare    ; and T00,S02,$E8 ==
         !byte $D0,$F4
         !byte $EA
         bcs   +
         ldx   #$E7
         ldy   #$01
         jsr   compare    ; and T00,S02,$E7 !=
         !byte $D5
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S02,$E7 =
         !byte $D5
;
; data prologue byte 2 (read)
;
+        lda   #$02
         ldx   #$EB
         ldy   #$06
         jsr   compare    ; if T00,S02,$EB ==
         !byte $BD,$8C,$C0
         !byte $10,$FB
         !byte $C9
         bcs   +
         ldx   #$F2
         ldy   #$04
         jsr   compare    ; and T00,S02,$F2 ==
         !byte $D0,$F2
         !byte $A0,$56
         bcs   +
         ldx   #$F1
         ldy   #$01
         jsr   compare    ; and T00,S02,$F1 !=
         !byte $AA
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S02,$F1 =
         !byte $AA
;
; data prologue byte 3 (read)
;
+        lda   #$02
         ldx   #$F6
         ldy   #$06
         jsr   compare    ; if T00,S02,$F6 ==
         !byte $BD,$8C,$C0
         !byte $10,$FB
         !byte $C9
         bcs   +
         ldx   #$FD
         ldy   #$02
         jsr   compare    ; and T00,S02,$FD ==
         !byte $D0,$E7
         bcs   +
         ldx   #$FC
         ldy   #$01
         jsr   compare    ; and T00,S02,$FC !=
         !byte $AD
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S02,$FC =
         !byte $AD
;
; data epilogue byte 1 (read)
;
+        lda   #$03
         ldx   #$2F
         ldy   #$06
         jsr   compare    ; if T00,S03,$2F ==
         !byte $BD,$8C,$C0
         !byte $10,$FB
         !byte $C9
         bcs   +
         ldx   #$36
         ldy   #$03
         jsr   compare    ; and T00,S03,$36 ==
         !byte $D0,$0A,$EA
         bcs   +
         ldx   #$35
         ldy   #$01
         jsr   compare    ; and T00,S03,$35 !=
         !byte $DE
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S03,$35 =
         !byte $DE
;
; data epilogue byte 2 (read)
;
+        lda   #$03
         ldx   #$39
         ldy   #$06
         jsr   compare    ; if T00,S03,$39 ==
         !byte $BD,$8C,$C0
         !byte $10,$FB
         !byte $C9
         bcs   +
         ldx   #$40
         ldy   #$03
         jsr   compare    ; and T00,S03,$40 ==
         !byte $F0,$5C,$38
         bcs   +
         ldx   #$3F
         ldy   #$01
         jsr   compare    ; and T00,S03,$3F !=
         !byte $AA
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S03,$3F =
         !byte $AA
;
; address prologue byte 1 (write)
;
+        lda   #$06
         ldx   #$79
         ldy   #$01
         jsr   compare    ; if T00,S06,$79 ==
         !byte $A9
         bcs   +
         ldx   #$7B
         ldy   #$02
         jsr   compare    ; and T00,S06,$7B ==
         !byte $20,$D5
         bcs   +
         ldx   #$7A
         ldy   #$01
         jsr   compare    ; and T00,S06,$7A !=
         !byte $D5
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S06,$7A =
         !byte $D5
;
; address prologue byte 2 (write)
;
+        lda   #$06
         ldx   #$7E
         ldy   #$01
         jsr   compare    ; if T00,S06,$7E ==
         !byte $A9
         bcs   +
         ldx   #$80
         ldy   #$02
         jsr   compare    ; and T00,S06,$80 ==
         !byte $20,$D5
         bcs   +
         ldx   #$7F
         ldy   #$01
         jsr   compare    ; and T00,S06,$7F !=
         !byte $AA
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S06,$7F =
         !byte $AA
;
; address prologue byte 3 (write)
;
+        lda   #$06
         ldx   #$83
         ldy   #$01
         jsr   compare    ; if T00,S06,$83 ==
         !byte $A9
         bcs   +
         ldx   #$85
         ldy   #$02
         jsr   compare    ; and T00,S06,$85 ==
         !byte $20,$D5
         bcs   +
         ldx   #$84
         ldy   #$01
         jsr   compare    ; and T00,S06,$84 !=
         !byte $96
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S06,$84 =
         !byte $96
;
; address epilogue byte 1 (write)
;
+        lda   #$06
         ldx   #$AD
         ldy   #$01
         jsr   compare    ; if T00,S06,$AD ==
         !byte $A9
         bcs   +
         ldx   #$AF
         ldy   #$02
         jsr   compare    ; and T00,S06,$AF ==
         !byte $20,$D5
         bcs   +
         ldx   #$AE
         ldy   #$01
         jsr   compare    ; and T00,S06,$AE !=
         !byte $DE
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S06,$AE =
         !byte $DE
;
; address epilogue byte 2 (write)
;
+        lda   #$06
         ldx   #$B2
         ldy   #$01
         jsr   compare    ; if T00,S06,$B2 ==
         !byte $A9
         bcs   +
         ldx   #$B4
         ldy   #$02
         jsr   compare    ; and T00,S06,$B4 ==
         !byte $20,$D5
         bcs   +
         ldx   #$B3
         ldy   #$01
         jsr   compare    ; and T00,S06,$B3 !=
         !byte $AA
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S06,$B3 =
         !byte $AA
;
; address epilogue byte 3 (write)
;
+        lda   #$06
         ldx   #$B7
         ldy   #$01
         jsr   compare    ; if T00,S06,$B7 ==
         !byte $A9
         bcs   +
         ldx   #$B9
         ldy   #$02
         jsr   compare    ; and T00,S06,$B9 ==
         !byte $20,$D5
         bcs   +
         ldx   #$B8
         ldy   #$01
         jsr   compare    ; and T00,S06,$B8 !=
         !byte $EB
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S06,$B8 =
         !byte $EB
;
; data prologue byte 1 (write)
;
+        lda   #$02
         ldx   #$52
         ldy   #$01
         jsr   compare    ; if T00,S02,$52 ==
         !byte $A9
         bcs   +
         ldx   #$54
         ldy   #$02
         jsr   compare    ; and T00,S02,$54 ==
         !byte $20,$B8
         bcs   +
         ldx   #$53
         ldy   #$01
         jsr   compare    ; and T00,S02,$53 !=
         !byte $D5
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S02,$53 =
         !byte $D5
;
; data prologue byte 2 (write)
;
+        lda   #$02
         ldx   #$57
         ldy   #$01
         jsr   compare    ; if T00,S02,$57 ==
         !byte $A9
         bcs   +
         ldx   #$59
         ldy   #$02
         jsr   compare    ; and T00,S02,$59 ==
         !byte $20,$B8
         bcs   +
         ldx   #$58
         ldy   #$01
         jsr   compare    ; and T00,S02,$58 ==
         !byte $AA
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S02,$58 =
         !byte $AA
;
; data prologue byte 3 (write)
;
+        lda   #$02
         ldx   #$5C
         ldy   #$01
         jsr   compare    ; if T00,S02,$5C ==
         !byte $A9
         bcs   +
         ldx   #$5E
         ldy   #$02
         jsr   compare    ; and T00,S02,$5E ==
         !byte $20,$B8
         bcs   +
         ldx   #$5D
         ldy   #$01
         jsr   compare    ; and T00,S02,$5D !=
         !byte $AD
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S02,$5D =
         !byte $AD
;
; data epilogue byte 1 (write)
;
+        lda   #$02
         ldx   #$9D
         ldy   #$01
         jsr   compare    ; if T00,S02,$9D ==
         !byte $A9
         bcs   +
         ldx   #$9F
         ldy   #$02
         jsr   compare    ; and T00,S02,$9F ==
         !byte $20,$B8
         bcs   +
         ldx   #$9E
         ldy   #$01
         jsr   compare    ; and T00,S02,$9E !=
         !byte $DE
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S02,$9E =
         !byte $DE
;
; data epilogue byte 2 (write)
;
+        lda   #$02
         ldx   #$A2
         ldy   #$01
         jsr   compare    ; if T00,S02,$A2 ==
         !byte $A9
         bcs   +
         ldx   #$A4
         ldy   #$02
         jsr   compare    ; and T00,S02,$A4 ==
         !byte $20,$B8
         bcs   +
         ldx   #$A3
         ldy   #$01
         jsr   compare    ; and T00,S02,$A3 !=
         !byte $AA
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S02,$A3 =
         !byte $AA
;
; data epilogue byte 3 (write)
;
+        lda   #$02
         ldx   #$A7
         ldy   #$01
         jsr   compare    ; if T00,S02,$A7 ==
         !byte $A9
         bcs   +
         ldx   #$A9
         ldy   #$02
         jsr   compare    ; and T00,S02,$A9 ==
         !byte $20,$B8
         bcs   +
         ldx   #$A8
         ldy   #$01
         jsr   compare    ; and T00,S02,$A8 !=
         !byte $EB
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S02,$A8 =
         !byte $EB
;
; data epilogue byte 4 (write)
; needed by some Sunburst disks
;
+        lda   #$02
         ldx   #$AC
         ldy   #$01
         jsr   compare    ; if T00,S02,$AC ==
         !byte $A9
         bcs   +
         ldx   #$AE
         ldy   #$02
         jsr   compare    ; and T00,S02,$AE ==
         !byte $20,$B8
         bcs   +
         ldx   #$AD
         ldy   #$01
         jsr   compare    ; and T00,S02,$AD !=
         !byte $FF
         bcc   +
         ldy   #$01
         jsr   modify     ; then set T00,S02,$AD =
         !byte $FF
+
.exit
}
